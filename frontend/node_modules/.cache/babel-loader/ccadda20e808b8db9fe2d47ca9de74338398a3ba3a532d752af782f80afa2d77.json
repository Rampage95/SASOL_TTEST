{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\skini\\\\SASOL_TTEST\\\\frontend\\\\src\\\\app\\\\productCatalog\\\\NewProduct.jsx\",\n  _s = $RefreshSig$();\n/*\r\n*\r\n    This component contains PRODUCT CREATION page, where the user can add a new product to the product catalog.\r\n*\r\n*/\n\nimport React, { useState } from \"react\";\nimport '../../App.css';\nimport { TextField, Button, IconButton, Chip, Switch, Typography, Avatar } from '@mui/material';\nimport ConfirmIcon from '@mui/icons-material/Check';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport AddIcon from '@mui/icons-material/Add';\nimport BackIcon from '@mui/icons-material/ArrowBack';\nimport { useNavigate } from \"react-router-dom\";\nimport NoImage from \"../assets/no_image.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewProduct() {\n  _s();\n  const [newData, setNewData] = useState({\n    name: '',\n    price: '',\n    description: '',\n    tags: [],\n    active: false,\n    picture: ''\n  });\n  const [error, setError] = useState({\n    name: {\n      status: false,\n      message: ''\n    },\n    price: {\n      status: false,\n      message: ''\n    },\n    description: {\n      status: false,\n      message: ''\n    }\n  });\n  const [newTag, setNewTag] = useState('');\n  const navigate = useNavigate();\n  const isEmpty = str => str.trim() === '';\n  const isFloat = str => /^\\d+(?:\\.\\d+)?$/.test(str);\n  const handleError = (field, value) => {\n    // handleError() manages the error status and message for the mandatory product field (Name, Price and Description).\n    // Briefly, this function will run validation tests on the provided field and update its error status based on the results of those tests.\n\n    switch (field) {\n      case 'name':\n        {\n          const not_valid = isEmpty(value);\n          if (not_valid) {\n            setError(prev => {\n              return {\n                ...prev,\n                name: {\n                  status: true,\n                  message: 'required field'\n                }\n              };\n            });\n          } else {\n            setError(prev => {\n              return {\n                ...prev,\n                name: {\n                  status: false,\n                  message: ''\n                }\n              };\n            });\n          }\n          break;\n        }\n      case 'price':\n        {\n          const test_1 = isEmpty(value);\n          const test_2 = !isFloat(value);\n          const not_valid = test_1 || test_2;\n          if (not_valid) {\n            setError(prev => {\n              return {\n                ...prev,\n                price: {\n                  status: true,\n                  message: test_1 ? 'required field' : test_2 ? 'price should be a number (ex: 120, 120.99)' : 'test failed'\n                }\n              };\n            });\n          } else {\n            setError(prev => {\n              return {\n                ...prev,\n                price: {\n                  status: false,\n                  message: ''\n                }\n              };\n            });\n          }\n          break;\n        }\n      case 'description':\n        {\n          const not_valid = isEmpty(value);\n          if (not_valid) {\n            setError(prev => {\n              return {\n                ...prev,\n                description: {\n                  status: true,\n                  message: 'required field'\n                }\n              };\n            });\n          } else {\n            setError(prev => {\n              return {\n                ...prev,\n                description: {\n                  status: false,\n                  message: ''\n                }\n              };\n            });\n          }\n          break;\n        }\n      default:\n        throw new Error('Unknown field provided to handleError function.');\n    }\n  };\n  const handleChange = e => {\n    // Triggered when the user change one of the product properties (name, price....)\n\n    setNewData(prev => {\n      return {\n        ...prev,\n        [e.target.name]: e.target.value\n      };\n    });\n    handleError(e.target.name, e.target.value);\n  };\n  const handleNewTag = e => {\n    // Triggered when the user writes a tag name in the New Tag input field\n    setNewTag(e.target.value);\n  };\n  const handleTagAdd = () => {\n    // Triggered when the user adds a tag to the product (+ icon near the New Tag input field)\n\n    let auxTagsArray = newData.tags;\n    auxTagsArray.push(newTag);\n    setNewData(prev => {\n      return {\n        ...prev,\n        tags: auxTagsArray\n      };\n    });\n    setNewTag('');\n  };\n  const handleTagDelete = index => {\n    // Triggered when the user removes a tag from the product\n\n    let auxTagsArray = newData.tags;\n    auxTagsArray.splice(index, 1);\n    setNewData(prev => {\n      return {\n        ...prev,\n        tags: auxTagsArray\n      };\n    });\n  };\n  const handleSwitch = e => {\n    // Triggered when the product status (active/inactive) switch is manipulated.\n\n    setNewData(prev => {\n      return {\n        ...prev,\n        active: e.target.checked\n      };\n    });\n  };\n  const handleClear = () => {\n    // Triggered when CLEAR button is clicked.\n    // clear will empty all the input fields and reset the error state.\n\n    setNewData({\n      name: '',\n      price: '',\n      description: '',\n      tags: [],\n      active: false,\n      picture: ''\n    });\n    setNewTag('');\n    setError({\n      name: {\n        status: false,\n        message: ''\n      },\n      price: {\n        status: false,\n        message: ''\n      },\n      description: {\n        status: false,\n        message: ''\n      }\n    });\n  };\n\n  // Asynchronous function thats convert files to base64\n  const toBase64 = file => new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = error => reject(error);\n  });\n  const handleUpload = event => {\n    // Triggered when the user upload a photo. \n    // The photo will be converted and stored as base64 string. \n\n    toBase64(event.target.files[0]).then(result => {\n      setNewData(prev => {\n        return {\n          ...prev,\n          picture: result\n        };\n      });\n    });\n  };\n  const handleConfirm = () => {\n    // POST API call: sending the new product data to the server\n\n    const body = {\n      name: newData.name,\n      price: newData.price,\n      picture: newData.picture,\n      description: newData.description,\n      active: newData.active,\n      tags: newData.tags.toString()\n    };\n    console.log('body:', body);\n    fetch('http://127.0.0.1:8000/product', {\n      method: 'POST',\n      mode: 'cors',\n      body: JSON.stringify(body)\n    }).then(() => navigate(\"/\")).catch(err => console.error('Error: Couldn\\'t POST the data', err));\n  };\n  const handleBack = () => {\n    // Navigate back to Product Catalog page\n\n    navigate(\"/\");\n  };\n  const confirm_button_enabled_status = () => {\n    // This fuction determines wether the confirm button should be enabled or disabled.\n    /*\r\n        The confirm button is enabled only when we have valid values \r\n        in the mandatory fields (Name, price and description)\r\n    */\n\n    return newData.name && newData.price && newData.description && !error.name.status && !error.price.status && !error.description.status;\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: `PRODUCT CREATION`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toolbar\",\n      style: {\n        justifyContent: 'flex-end'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(BackIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 56\n        }, this),\n        onClick: handleBack,\n        children: \"BACK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(ClearIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 56\n        }, this),\n        onClick: handleClear,\n        children: \"CLEAR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(ConfirmIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 56\n        }, this),\n        onClick: handleConfirm,\n        disabled: !confirm_button_enabled_status(),\n        children: \"CONFIRM\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"edit-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-item-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"upload\",\n          type: \"file\",\n          accept: \"image/png, image/gif, image/jpeg\",\n          onChange: handleUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"upload\",\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              id: \"product-img\",\n              alt: \"product\",\n              src: newData.picture ? newData.picture : NoImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        error: error.name.status,\n        helperText: error.name.message,\n        className: \"grid-item-1\",\n        name: \"name\",\n        label: \"Name *\",\n        variant: \"outlined\",\n        size: \"small\",\n        value: newData.name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        error: error.price.status,\n        helperText: error.price.message,\n        className: \"grid-item-2\",\n        name: \"price\",\n        label: \"Price *\",\n        variant: \"outlined\",\n        size: \"small\",\n        value: newData.price,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        error: error.description.status,\n        helperText: error.description.message,\n        className: \"grid-item-3\",\n        name: \"description\",\n        label: \"Description *\",\n        multiline: true,\n        rows: 4,\n        variant: \"outlined\",\n        size: \"small\",\n        value: newData.description,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-item-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"New Tag\",\n            size: \"small\",\n            value: newTag,\n            onChange: handleNewTag\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            id: \"add-button\",\n            onClick: handleTagAdd,\n            disabled: !newTag,\n            children: /*#__PURE__*/_jsxDEV(AddIcon, {\n              style: !newTag ? {\n                backgroundColor: 'gray'\n              } : {\n                backgroundColor: '#1976d2'\n              },\n              id: \"add-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: newData && newData.tags && newData.tags.map((tag, index) => /*#__PURE__*/_jsxDEV(Chip, {\n            label: tag,\n            color: \"primary\",\n            onDelete: () => handleTagDelete(index)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 66\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-item-5\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: \"Activate Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          checked: newData.active,\n          onChange: handleSwitch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 9\n  }, this);\n}\n_s(NewProduct, \"b68yq5mi/XX6Baa6qYOPaHuZf3s=\", false, function () {\n  return [useNavigate];\n});\n_c = NewProduct;\nvar _c;\n$RefreshReg$(_c, \"NewProduct\");","map":{"version":3,"names":["React","useState","TextField","Button","IconButton","Chip","Switch","Typography","Avatar","ConfirmIcon","ClearIcon","AddIcon","BackIcon","useNavigate","NoImage","jsxDEV","_jsxDEV","NewProduct","_s","newData","setNewData","name","price","description","tags","active","picture","error","setError","status","message","newTag","setNewTag","navigate","isEmpty","str","trim","isFloat","test","handleError","field","value","not_valid","prev","test_1","test_2","Error","handleChange","e","target","handleNewTag","handleTagAdd","auxTagsArray","push","handleTagDelete","index","splice","handleSwitch","checked","handleClear","toBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","handleUpload","event","files","then","handleConfirm","body","toString","console","log","fetch","method","mode","JSON","stringify","catch","err","handleBack","confirm_button_enabled_status","Fragment","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","justifyContent","variant","startIcon","onClick","disabled","id","type","accept","onChange","htmlFor","alt","src","helperText","label","size","multiline","rows","backgroundColor","map","tag","color","onDelete","_c","$RefreshReg$"],"sources":["C:/Users/skini/SASOL_TTEST/frontend/src/app/productCatalog/NewProduct.jsx"],"sourcesContent":["/*\r\n*\r\n    This component contains PRODUCT CREATION page, where the user can add a new product to the product catalog.\r\n*\r\n*/\r\n\r\nimport React, { useState } from \"react\";\r\nimport '../../App.css';\r\nimport { TextField, Button, IconButton, Chip, Switch, Typography, Avatar } from '@mui/material';\r\nimport ConfirmIcon from '@mui/icons-material/Check';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport BackIcon from '@mui/icons-material/ArrowBack';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport NoImage from \"../assets/no_image.jpg\";\r\n\r\nexport default function NewProduct() {\r\n    const [newData, setNewData] = useState({\r\n        name: '',\r\n        price: '',\r\n        description: '',\r\n        tags: [],\r\n        active: false,\r\n        picture: '',\r\n    });\r\n    const [error, setError] = useState({\r\n        name: { status: false, message: '' },\r\n        price: { status: false, message: '' },\r\n        description: { status: false, message: '' },\r\n    });\r\n    const [newTag, setNewTag] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const isEmpty = (str) => str.trim() === '';\r\n\r\n    const isFloat = (str) => /^\\d+(?:\\.\\d+)?$/.test(str);\r\n\r\n    const handleError = (field, value) => {\r\n        // handleError() manages the error status and message for the mandatory product field (Name, Price and Description).\r\n        // Briefly, this function will run validation tests on the provided field and update its error status based on the results of those tests.\r\n\r\n        switch (field) {\r\n            case 'name': {\r\n                const not_valid = isEmpty(value);\r\n                if (not_valid) {\r\n                    setError(prev => {\r\n                        return ({\r\n                            ...prev,\r\n                            name: { status: true, message: 'required field' },\r\n                        });\r\n                    });\r\n                } else {\r\n                    setError(prev => {\r\n                        return ({\r\n                            ...prev,\r\n                            name: { status: false, message: '' },\r\n                        });\r\n                    });\r\n                }\r\n                break;\r\n            }\r\n            case 'price': {\r\n                const test_1 = isEmpty(value);\r\n                const test_2 = !isFloat(value);\r\n                const not_valid = test_1 || test_2;\r\n                if (not_valid) {\r\n                    setError(prev => {\r\n                        return ({\r\n                            ...prev,\r\n                            price: { status: true, message: test_1 ? 'required field' : test_2 ? 'price should be a number (ex: 120, 120.99)' : 'test failed' },\r\n                        });\r\n                    });\r\n                } else {\r\n                    setError(prev => {\r\n                        return ({\r\n                            ...prev,\r\n                            price: { status: false, message: '' },\r\n                        });\r\n                    });\r\n                }\r\n                break;\r\n            }\r\n            case 'description': {\r\n                const not_valid = isEmpty(value);\r\n                if (not_valid) {\r\n                    setError(prev => {\r\n                        return ({\r\n                            ...prev,\r\n                            description: { status: true, message: 'required field' },\r\n                        });\r\n                    });\r\n                } else {\r\n                    setError(prev => {\r\n                        return ({\r\n                            ...prev,\r\n                            description: { status: false, message: '' },\r\n                        });\r\n                    });\r\n                }\r\n                break;\r\n            }\r\n            default: throw new Error('Unknown field provided to handleError function.');\r\n        }\r\n    }\r\n\r\n    const handleChange = e => {\r\n        // Triggered when the user change one of the product properties (name, price....)\r\n\r\n        setNewData(prev => {\r\n            return ({\r\n                ...prev,\r\n                [e.target.name]: e.target.value,\r\n            });\r\n        });\r\n        handleError(e.target.name, e.target.value);\r\n    }\r\n\r\n    const handleNewTag = e => {\r\n        // Triggered when the user writes a tag name in the New Tag input field\r\n        setNewTag(e.target.value);\r\n    }\r\n\r\n    const handleTagAdd = () => {\r\n        // Triggered when the user adds a tag to the product (+ icon near the New Tag input field)\r\n\r\n        let auxTagsArray = newData.tags;\r\n        auxTagsArray.push(newTag);\r\n        setNewData(prev => {\r\n            return ({\r\n                ...prev,\r\n                tags: auxTagsArray,\r\n            });\r\n        });\r\n        setNewTag('');\r\n    }\r\n\r\n    const handleTagDelete = index => {\r\n        // Triggered when the user removes a tag from the product\r\n\r\n        let auxTagsArray = newData.tags;\r\n        auxTagsArray.splice(index, 1);\r\n        setNewData(prev => {\r\n            return ({\r\n                ...prev,\r\n                tags: auxTagsArray,\r\n            });\r\n        });\r\n    }\r\n\r\n    const handleSwitch = e => {\r\n        // Triggered when the product status (active/inactive) switch is manipulated.\r\n\r\n        setNewData(prev => {\r\n            return ({\r\n                ...prev,\r\n                active: e.target.checked,\r\n            });\r\n        });\r\n    }\r\n\r\n    const handleClear = () => {\r\n        // Triggered when CLEAR button is clicked.\r\n        // clear will empty all the input fields and reset the error state.\r\n\r\n        setNewData({\r\n            name: '',\r\n            price: '',\r\n            description: '',\r\n            tags: [],\r\n            active: false,\r\n            picture: '',\r\n        });\r\n        setNewTag('');\r\n        setError({\r\n            name: { status: false, message: '' },\r\n            price: { status: false, message: '' },\r\n            description: { status: false, message: '' },\r\n        });\r\n    }\r\n\r\n    // Asynchronous function thats convert files to base64\r\n    const toBase64 = file => new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n    });\r\n\r\n    const handleUpload = event => {\r\n        // Triggered when the user upload a photo. \r\n        // The photo will be converted and stored as base64 string. \r\n\r\n        toBase64(event.target.files[0])\r\n            .then(result => {\r\n                setNewData(prev => {\r\n                    return ({\r\n                        ...prev,\r\n                        picture: result,\r\n                    });\r\n                });\r\n            });\r\n    }\r\n\r\n    const handleConfirm = () => {\r\n        // POST API call: sending the new product data to the server\r\n\r\n        const body = {\r\n            name: newData.name,\r\n            price: newData.price,\r\n            picture: newData.picture,\r\n            description: newData.description,\r\n            active: newData.active,\r\n            tags: newData.tags.toString(),\r\n        }\r\n        console.log('body:', body);\r\n        fetch('http://127.0.0.1:8000/product', {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            body: JSON.stringify(body),\r\n        })\r\n            .then(() => navigate(\"/\"))\r\n            .catch(err => console.error('Error: Couldn\\'t POST the data', err));\r\n    }\r\n\r\n    const handleBack = () => {\r\n        // Navigate back to Product Catalog page\r\n\r\n        navigate(\"/\");\r\n    }\r\n\r\n    const confirm_button_enabled_status = () => {\r\n        // This fuction determines wether the confirm button should be enabled or disabled.\r\n        /*\r\n            The confirm button is enabled only when we have valid values \r\n            in the mandatory fields (Name, price and description)\r\n        */\r\n\r\n        return (\r\n            newData.name && newData.price && newData.description &&\r\n            !error.name.status && !error.price.status && !error.description.status\r\n        );\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className='title'>\r\n                <h1>\r\n                    {`PRODUCT CREATION`}\r\n                </h1>\r\n            </div>\r\n            <div className='toolbar' style={{ justifyContent: 'flex-end' }}>\r\n                <Button variant=\"contained\" startIcon={<BackIcon />} onClick={handleBack}>\r\n                    {\"BACK\"}\r\n                </Button>\r\n                <Button variant=\"contained\" startIcon={<ClearIcon />} onClick={handleClear}>\r\n                    {\"CLEAR\"}\r\n                </Button>\r\n                <Button variant=\"contained\" startIcon={<ConfirmIcon />} onClick={handleConfirm} disabled={!confirm_button_enabled_status()}>\r\n                    {\"CONFIRM\"}\r\n                </Button>\r\n            </div>\r\n            <div className='edit-content'>\r\n                <div className=\"grid-item-0\">\r\n                    <input\r\n                        id=\"upload\"\r\n                        type=\"file\"\r\n                        accept=\"image/png, image/gif, image/jpeg\"\r\n                        onChange={handleUpload}\r\n                    />\r\n                    <IconButton>\r\n                        <label htmlFor=\"upload\">\r\n                            <Avatar id='product-img' alt=\"product\" src={newData.picture ? newData.picture : NoImage} />\r\n                        </label>\r\n                    </IconButton>\r\n                </div>\r\n                <TextField error={error.name.status} helperText={error.name.message} className=\"grid-item-1\" name=\"name\" label=\"Name *\" variant=\"outlined\" size='small' value={newData.name} onChange={handleChange} />\r\n                <TextField error={error.price.status} helperText={error.price.message} className=\"grid-item-2\" name=\"price\" label=\"Price *\" variant=\"outlined\" size='small' value={newData.price} onChange={handleChange} />\r\n                <TextField error={error.description.status} helperText={error.description.message} className=\"grid-item-3\" name=\"description\" label=\"Description *\" multiline rows={4} variant=\"outlined\" size='small' value={newData.description} onChange={handleChange} />\r\n                <div className=\"grid-item-4\">\r\n                    <div>\r\n                        <TextField label=\"New Tag\" size='small' value={newTag} onChange={handleNewTag} />\r\n                        <IconButton id='add-button' onClick={handleTagAdd} disabled={!newTag}>\r\n                            <AddIcon style={!newTag ? { backgroundColor: 'gray' } : { backgroundColor: '#1976d2' }} id='add-icon' />\r\n                        </IconButton>\r\n                    </div>\r\n                    <div>\r\n                        {\r\n                            (newData && newData.tags) && (\r\n                                newData.tags.map((tag, index) => <Chip key={index} label={tag} color='primary' onDelete={() => handleTagDelete(index)} />)\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className='grid-item-5'>\r\n                    <Typography variant=\"body1\">\r\n                        {\"Activate Product\"}\r\n                    </Typography>\r\n                    <Switch checked={newData.active} onChange={handleSwitch} />\r\n                </div>\r\n            </div>\r\n        </React.Fragment >\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}