{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\skini\\\\SASOL_TTEST\\\\frontend\\\\src\\\\app\\\\productCatalog\\\\ProductList.jsx\",\n  _s = $RefreshSig$();\n/*\r\n*\r\n    This component contains the product catalog (product list). \r\n    A search input field is provided in it to filter the product list.\r\n*\r\n*/\n\nimport React, { useEffect, useState } from \"react\";\nimport '../../App.css';\n// import { raw_data } from '../static_data.js';\nimport ProductTemplate from './ProductTemplate';\nimport { TextField, InputAdornment, Button, LinearProgress, Box, Typography } from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport AddIcon from '@mui/icons-material/Add';\nimport { useNavigate } from \"react-router-dom\";\nimport Empty from \"../assets/empty.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProductList() {\n  _s();\n  const navigate = useNavigate();\n  const [data, setData] = useState();\n  const [dataImage, setDataImage] = useState();\n  const [refresh, setRefresh] = useState(false);\n\n  // useEffect(() => {\n  //     // fill the data states with static data (This helps in the static website creation phase). \n  //\n  //     setData(raw_data);\n  //     setDataImage(raw_data);\n  // }, []);\n\n  useEffect(() => {\n    // GET api call: get the prduct list from the server.\n    /* \r\n        The received data are stored in 2 states (data and dataImage).\r\n            --> data: serves as a backup copy that contains the full product list\r\n            --> dataImage: contains the filtered product list (i.e the search operation performed by the user)\r\n    */\n\n    fetch('http://127.0.0.1:8000/product').then(response => response.json()).then(data => {\n      const aux_data = data.map(value => {\n        return {\n          ...value,\n          tags: value.tags ? value.tags.split(',') : []\n        };\n      });\n      setData(aux_data);\n      setDataImage(aux_data);\n    }).catch(err => {\n      setData([]);\n      setDataImage([]);\n      console.log('Error: couldn\\'t GET data.', err.message);\n    });\n  }, [refresh]);\n  console.log('data:', data);\n  const getStatus = bool => bool ? 'active' : 'inactive';\n  const handleSearch = e => {\n    // Triggered when the user search for specific products (through the search bar)\n\n    const keyword = e.target.value;\n    const filteredData = data.filter(value => {\n      return value.name.toLowerCase().includes(keyword.toLowerCase()) || value.price.toString().toLowerCase().includes(keyword.toLowerCase()) || value.description.toLowerCase().includes(keyword.toLowerCase()) || value.tags.some(tag => tag.toLowerCase().includes(keyword.toLowerCase())) || getStatus(value.active).includes(keyword.toLowerCase());\n    });\n    setDataImage(filteredData);\n  };\n  const handleNewProduct = () => {\n    // Triggered when the NEW PRODUCT button is clicked. \n    // This will take the user to the PRODUCT CREATION page.\n\n    navigate(\"/product/new\", {});\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: 'PRODUCTS CATALOG'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toolbar\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"search_bar\",\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this)\n        },\n        variant: \"standard\",\n        onChange: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 56\n        }, this),\n        onClick: handleNewProduct,\n        children: \"NEW PRODUCT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: dataImage ? /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          maxWidth: '250px',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this) : dataImage.length > 0 ? dataImage.map(product => {\n        return /*#__PURE__*/_jsxDEV(ProductTemplate, {\n          data: product,\n          setRefresh: setRefresh\n        }, product.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 33\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: Empty,\n          alt: \"empty product list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No product found!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n_s(ProductList, \"0ewDNdxPCh/B4gozG5s7eZYfF28=\", false, function () {\n  return [useNavigate];\n});\n_c = ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["React","useEffect","useState","ProductTemplate","TextField","InputAdornment","Button","LinearProgress","Box","Typography","SearchIcon","AddIcon","useNavigate","Empty","jsxDEV","_jsxDEV","ProductList","_s","navigate","data","setData","dataImage","setDataImage","refresh","setRefresh","fetch","then","response","json","aux_data","map","value","tags","split","catch","err","console","log","message","getStatus","bool","handleSearch","e","keyword","target","filteredData","filter","name","toLowerCase","includes","price","toString","description","some","tag","active","handleNewProduct","Fragment","children","className","fileName","_jsxFileName","lineNumber","columnNumber","id","InputProps","startAdornment","position","variant","onChange","startIcon","onClick","sx","maxWidth","width","length","product","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/skini/SASOL_TTEST/frontend/src/app/productCatalog/ProductList.jsx"],"sourcesContent":["/*\r\n*\r\n    This component contains the product catalog (product list). \r\n    A search input field is provided in it to filter the product list.\r\n*\r\n*/\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport '../../App.css';\r\n// import { raw_data } from '../static_data.js';\r\nimport ProductTemplate from './ProductTemplate';\r\nimport { TextField, InputAdornment, Button, LinearProgress, Box, Typography } from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Empty from \"../assets/empty.png\";\r\n\r\nexport default function ProductList() {\r\n    const navigate = useNavigate();\r\n    const [data, setData] = useState();\r\n    const [dataImage, setDataImage] = useState();\r\n    const [refresh, setRefresh] = useState(false);\r\n\r\n    // useEffect(() => {\r\n    //     // fill the data states with static data (This helps in the static website creation phase). \r\n    //\r\n    //     setData(raw_data);\r\n    //     setDataImage(raw_data);\r\n    // }, []);\r\n\r\n    useEffect(() => {\r\n        // GET api call: get the prduct list from the server.\r\n        /* \r\n            The received data are stored in 2 states (data and dataImage).\r\n                --> data: serves as a backup copy that contains the full product list\r\n                --> dataImage: contains the filtered product list (i.e the search operation performed by the user)\r\n        */\r\n\r\n        fetch('http://127.0.0.1:8000/product')\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                const aux_data = data.map(value => {\r\n                    return ({\r\n                        ...value,\r\n                        tags: value.tags ? value.tags.split(',') : [],\r\n                    })\r\n                });\r\n                setData(aux_data);\r\n                setDataImage(aux_data);\r\n            })\r\n            .catch((err) => {\r\n                setData([]);\r\n                setDataImage([]);\r\n                console.log('Error: couldn\\'t GET data.', err.message);\r\n            });\r\n    }, [refresh]);\r\n\r\n    console.log('data:', data);\r\n\r\n    const getStatus = bool => bool ? 'active' : 'inactive';\r\n\r\n    const handleSearch = (e) => {\r\n        // Triggered when the user search for specific products (through the search bar)\r\n\r\n        const keyword = e.target.value;\r\n        const filteredData = data.filter(value => {\r\n            return (\r\n                value.name.toLowerCase().includes(keyword.toLowerCase()) ||\r\n                value.price.toString().toLowerCase().includes(keyword.toLowerCase()) ||\r\n                value.description.toLowerCase().includes(keyword.toLowerCase()) ||\r\n                (value.tags.some(tag => tag.toLowerCase().includes(keyword.toLowerCase()))) ||\r\n                getStatus(value.active).includes(keyword.toLowerCase())\r\n\r\n            )\r\n        });\r\n        setDataImage(filteredData);\r\n    }\r\n\r\n    const handleNewProduct = () => {\r\n        // Triggered when the NEW PRODUCT button is clicked. \r\n        // This will take the user to the PRODUCT CREATION page.\r\n\r\n        navigate(\"/product/new\", {});\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className='title'>\r\n                <h1>\r\n                    {'PRODUCTS CATALOG'}\r\n                </h1>\r\n            </div>\r\n            <div className='toolbar'>\r\n                <TextField\r\n                    id=\"search_bar\"\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <SearchIcon />\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                    variant=\"standard\"\r\n                    onChange={handleSearch}\r\n                />\r\n                <Button variant=\"contained\" startIcon={<AddIcon />} onClick={handleNewProduct}>\r\n                    {\"NEW PRODUCT\"}\r\n                </Button>\r\n            </div>\r\n            <div className='content'>\r\n                {dataImage ? (\r\n                    <Box sx={{ maxWidth: '250px', width: '100%' }}>\r\n                        <Typography variant='body2'>\r\n                            {\"Loading...\"}\r\n                        </Typography>\r\n                        <LinearProgress />\r\n                    </Box>) : (\r\n                    (dataImage.length > 0) ? (\r\n                        dataImage.map(product => {\r\n                            return (\r\n                                <ProductTemplate key={product.id} data={product} setRefresh={setRefresh} />\r\n                            )\r\n                        })\r\n                    ) : (\r\n                        <div className=\"empty-list\">\r\n                            <img src={Empty} alt=\"empty product list\" />\r\n                            <p>No product found!</p>\r\n                        </div>\r\n                    ))}\r\n            </div>\r\n        </React.Fragment >\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}