{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\skini\\\\SASOL_TTEST\\\\frontend\\\\src\\\\app\\\\productCatalog\\\\Product.jsx\",\n  _s = $RefreshSig$();\n/*\r\n*\r\n    This component contains PRODUCT DETAILS page, where the user can edit a selected product properties.\r\n*\r\n*/\n\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation } from 'react-router-dom';\nimport '../../App.css';\nimport { TextField, Button, IconButton, Chip, Switch, Typography, Avatar } from '@mui/material';\nimport ConfirmIcon from '@mui/icons-material/Check';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport BackIcon from '@mui/icons-material/ArrowBack';\nimport AddIcon from '@mui/icons-material/Add';\nimport { useNavigate } from \"react-router-dom\";\nimport NoImage from \"../assets/no_image.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Product() {\n  _s();\n  const location = useLocation();\n  const data = location.state;\n  const [editedData, setEditedData] = useState({\n    name: '',\n    price: '',\n    description: '',\n    tags: [],\n    active: false,\n    picture: ''\n  });\n  const [newTag, setNewTag] = useState('');\n  const [error, setError] = useState({\n    name: {\n      status: false,\n      message: ''\n    },\n    price: {\n      status: false,\n      message: ''\n    },\n    description: {\n      status: false,\n      message: ''\n    }\n  });\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Making a deep copy from the product data received.\n    // The copy made (named ediedData) will serve as a container of the user modifications on the product properties (name, price...).\n\n    if (data) {\n      const clone = {};\n      for (let i in data) {\n        var _data$i;\n        clone[i] = (_data$i = data[i]) !== null && _data$i !== void 0 ? _data$i : '';\n      }\n      setEditedData(clone);\n    }\n  }, [data]);\n  const isEmpty = str => str.trim() === '';\n  const isFloat = str => /^\\d+(?:\\.\\d+)?$/.test(str);\n  const handleError = (field, value) => {\n    // handleError() manages the error status and message for the mandatory product field (Name, Price and Description).\n    // Briefly, this function will run validation tests on the provided field and update its error status based on the results of those tests.\n\n    switch (field) {\n      case 'name':\n        {\n          const not_valid = isEmpty(value);\n          if (not_valid) {\n            setError(prev => {\n              return {\n                ...prev,\n                name: {\n                  status: true,\n                  message: 'required field'\n                }\n              };\n            });\n          } else {\n            setError(prev => {\n              return {\n                ...prev,\n                name: {\n                  status: false,\n                  message: ''\n                }\n              };\n            });\n          }\n          break;\n        }\n      case 'price':\n        {\n          const test_1 = isEmpty(value);\n          const test_2 = !isFloat(value);\n          const not_valid = test_1 || test_2;\n          if (not_valid) {\n            setError(prev => {\n              return {\n                ...prev,\n                price: {\n                  status: true,\n                  message: test_1 ? 'required field' : test_2 ? 'price should be a number (ex: 120, 120.99)' : 'test failed'\n                }\n              };\n            });\n          } else {\n            setError(prev => {\n              return {\n                ...prev,\n                price: {\n                  status: false,\n                  message: ''\n                }\n              };\n            });\n          }\n          break;\n        }\n      case 'description':\n        {\n          const not_valid = isEmpty(value);\n          if (not_valid) {\n            setError(prev => {\n              return {\n                ...prev,\n                description: {\n                  status: true,\n                  message: 'required field'\n                }\n              };\n            });\n          } else {\n            setError(prev => {\n              return {\n                ...prev,\n                description: {\n                  status: false,\n                  message: ''\n                }\n              };\n            });\n          }\n          break;\n        }\n      default:\n        throw new Error('Unknown field provided to handleError function.');\n    }\n  };\n  const handleChange = e => {\n    // Triggered when the user change one of the product properties (name, price....)\n\n    setEditedData(prev => {\n      return {\n        ...prev,\n        [e.target.name]: e.target.value\n      };\n    });\n    handleError(e.target.name, e.target.value);\n  };\n  const handleNewTag = e => {\n    // Triggered when the user writes a tag name in the New Tag input field\n    setNewTag(e.target.value);\n  };\n  const handleTagAdd = () => {\n    // Triggered when the user adds a tag to the product (+ icon near the New Tag input field)\n\n    let auxTagsArray = editedData.tags;\n    auxTagsArray.push(newTag);\n    setEditedData(prev => {\n      return {\n        ...prev,\n        tags: auxTagsArray\n      };\n    });\n    setNewTag('');\n  };\n  const handleTagDelete = index => {\n    // Triggered when the user removes a tag from the product\n\n    let auxTagsArray = editedData.tags;\n    auxTagsArray.splice(index, 1);\n    setEditedData(prev => {\n      return {\n        ...prev,\n        tags: auxTagsArray\n      };\n    });\n  };\n  const handleSwitch = e => {\n    // Triggered when the product status (active/inactive) switch is manipulated.\n\n    setEditedData(prev => {\n      return {\n        ...prev,\n        active: e.target.checked\n      };\n    });\n  };\n\n  // Asynchronous function thats convert files to base64\n  const toBase64 = file => new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = error => reject(error);\n  });\n  const handleUpload = event => {\n    // Triggered when the user uploads a photo. \n    // The photo will be converted and stored as base64 string.\n\n    toBase64(event.target.files[0]).then(result => {\n      console.log(result);\n      setEditedData(prev => {\n        return {\n          ...prev,\n          picture: result\n        };\n      });\n    });\n  };\n  const handleClear = () => {\n    // Triggered when CLEAR button is clicked.\n    // clear will empty all the input fields and reset the error state.\n\n    setEditedData({\n      name: '',\n      price: '',\n      description: '',\n      tags: [],\n      active: false,\n      picture: ''\n    });\n    setNewTag('');\n  };\n  const handleConfirm = () => {\n    // PUT api call: sending the edited product data to be added to the DB\n\n    const body = {\n      id: editedData.id,\n      name: editedData.name,\n      price: editedData.price,\n      picture: editedData.picture,\n      description: editedData.description,\n      active: editedData.active,\n      tags: editedData.tags.toString()\n    };\n    fetch(`http://127.0.0.1:8000/product`, {\n      method: 'PUT',\n      mode: 'cors',\n      body: JSON.stringify(body)\n    }).then(() => navigate(\"/\", {})).catch(err => console.error('Error: Couldn\\'t PUT the data', err));\n  };\n  const handleBack = () => {\n    // Navigate back to Product Catalog page\n\n    navigate(\"/\");\n  };\n  const confirm_button_enabled_status = () => {\n    // This fuction determines wether the confirm button should be enabled or disabled.\n    /*\r\n        The confirm button is enabled only when we have valid values \r\n        in the mandatory fields (Name, price and description)\r\n    */\n\n    return editedData.name && editedData.price && editedData.description && !error.name.status && !error.price.status && !error.description.status;\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: `PRODUCT DETAILS`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toolbar\",\n      style: {\n        justifyContent: 'flex-end'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(BackIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 56\n        }, this),\n        onClick: handleBack,\n        children: \"BACK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(ClearIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 56\n        }, this),\n        onClick: handleClear,\n        children: \"CLEAR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(ConfirmIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 56\n        }, this),\n        onClick: handleConfirm,\n        disabled: !confirm_button_enabled_status(),\n        children: \"CONFIRM\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"edit-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-item-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"upload\",\n          type: \"file\",\n          accept: \"image/png, image/gif, image/jpeg\",\n          onChange: handleUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"upload\",\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              id: \"product-img\",\n              alt: \"product\",\n              src: editedData.picture ? editedData.picture : NoImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        error: error.name.status,\n        helperText: error.name.message,\n        className: \"grid-item-1\",\n        name: \"name\",\n        label: \"Name\",\n        variant: \"outlined\",\n        size: \"small\",\n        value: editedData.name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        error: error.price.status,\n        helperText: error.price.message,\n        className: \"grid-item-2\",\n        name: \"price\",\n        label: \"Price\",\n        variant: \"outlined\",\n        size: \"small\",\n        value: editedData.price,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        error: error.description.status,\n        helperText: error.description.message,\n        className: \"grid-item-3\",\n        name: \"description\",\n        label: \"Description\",\n        multiline: true,\n        rows: 4,\n        variant: \"outlined\",\n        size: \"small\",\n        value: editedData.description,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-item-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"New Tag\",\n            size: \"small\",\n            value: newTag,\n            onChange: handleNewTag\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            id: \"add-button\",\n            onClick: handleTagAdd,\n            disabled: !newTag,\n            children: /*#__PURE__*/_jsxDEV(AddIcon, {\n              style: !newTag ? {\n                backgroundColor: 'gray'\n              } : {\n                backgroundColor: '#1976d2'\n              },\n              id: \"add-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: editedData && editedData.tags && editedData.tags.map((tag, index) => /*#__PURE__*/_jsxDEV(Chip, {\n            label: tag,\n            color: \"primary\",\n            onDelete: () => handleTagDelete(index)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 69\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-item-5\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: \"Activate Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          checked: editedData.active,\n          onChange: handleSwitch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 257,\n    columnNumber: 9\n  }, this);\n}\n_s(Product, \"kIDODwQCI00SI169YjFWbtRRbwE=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Product;\nvar _c;\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","TextField","Button","IconButton","Chip","Switch","Typography","Avatar","ConfirmIcon","ClearIcon","BackIcon","AddIcon","useNavigate","NoImage","jsxDEV","_jsxDEV","Product","_s","location","data","state","editedData","setEditedData","name","price","description","tags","active","picture","newTag","setNewTag","error","setError","status","message","navigate","clone","i","_data$i","isEmpty","str","trim","isFloat","test","handleError","field","value","not_valid","prev","test_1","test_2","Error","handleChange","e","target","handleNewTag","handleTagAdd","auxTagsArray","push","handleTagDelete","index","splice","handleSwitch","checked","toBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","handleUpload","event","files","then","console","log","handleClear","handleConfirm","body","id","toString","fetch","method","mode","JSON","stringify","catch","err","handleBack","confirm_button_enabled_status","Fragment","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","justifyContent","variant","startIcon","onClick","disabled","type","accept","onChange","htmlFor","alt","src","helperText","label","size","multiline","rows","backgroundColor","map","tag","color","onDelete","_c","$RefreshReg$"],"sources":["C:/Users/skini/SASOL_TTEST/frontend/src/app/productCatalog/Product.jsx"],"sourcesContent":["/*\r\n*\r\n    This component contains PRODUCT DETAILS page, where the user can edit a selected product properties.\r\n*\r\n*/\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useLocation } from 'react-router-dom';\r\nimport '../../App.css';\r\nimport { TextField, Button, IconButton, Chip, Switch, Typography, Avatar } from '@mui/material';\r\nimport ConfirmIcon from '@mui/icons-material/Check';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport BackIcon from '@mui/icons-material/ArrowBack';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport NoImage from \"../assets/no_image.jpg\";\r\n\r\nexport default function Product() {\r\n    const location = useLocation();\r\n    const data = location.state;\r\n    const [editedData, setEditedData] = useState({\r\n        name: '',\r\n        price: '',\r\n        description: '',\r\n        tags: [],\r\n        active: false,\r\n        picture: ''\r\n    });\r\n    const [newTag, setNewTag] = useState('');\r\n    const [error, setError] = useState({\r\n        name: { status: false, message: '' },\r\n        price: { status: false, message: '' },\r\n        description: { status: false, message: '' },\r\n    });\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        // Making a deep copy from the product data received.\r\n        // The copy made (named ediedData) will serve as a container of the user modifications on the product properties (name, price...).\r\n\r\n        if (data) {\r\n            const clone = {};\r\n            for (let i in data) {\r\n                clone[i] = data[i] ?? '';\r\n            }\r\n            setEditedData(clone);\r\n        }\r\n    }, [data]);\r\n\r\n    const isEmpty = (str) => str.trim() === '';\r\n\r\n    const isFloat = (str) => /^\\d+(?:\\.\\d+)?$/.test(str);\r\n\r\n    const handleError = (field, value) => {\r\n        // handleError() manages the error status and message for the mandatory product field (Name, Price and Description).\r\n        // Briefly, this function will run validation tests on the provided field and update its error status based on the results of those tests.\r\n\r\n        switch (field) {\r\n            case 'name': {\r\n                const not_valid = isEmpty(value);\r\n                if (not_valid) {\r\n                    setError(prev => {\r\n                        return ({\r\n                            ...prev,\r\n                            name: { status: true, message: 'required field' },\r\n                        });\r\n                    });\r\n                } else {\r\n                    setError(prev => {\r\n                        return ({\r\n                            ...prev,\r\n                            name: { status: false, message: '' },\r\n                        });\r\n                    });\r\n                }\r\n                break;\r\n            }\r\n            case 'price': {\r\n                const test_1 = isEmpty(value);\r\n                const test_2 = !isFloat(value);\r\n                const not_valid = test_1 || test_2;\r\n                if (not_valid) {\r\n                    setError(prev => {\r\n                        return ({\r\n                            ...prev,\r\n                            price: { status: true, message: test_1 ? 'required field' : test_2 ? 'price should be a number (ex: 120, 120.99)' : 'test failed' },\r\n                        });\r\n                    });\r\n                } else {\r\n                    setError(prev => {\r\n                        return ({\r\n                            ...prev,\r\n                            price: { status: false, message: '' },\r\n                        });\r\n                    });\r\n                }\r\n                break;\r\n            }\r\n            case 'description': {\r\n                const not_valid = isEmpty(value);\r\n                if (not_valid) {\r\n                    setError(prev => {\r\n                        return ({\r\n                            ...prev,\r\n                            description: { status: true, message: 'required field' },\r\n                        });\r\n                    });\r\n                } else {\r\n                    setError(prev => {\r\n                        return ({\r\n                            ...prev,\r\n                            description: { status: false, message: '' },\r\n                        });\r\n                    });\r\n                }\r\n                break;\r\n            }\r\n            default: throw new Error('Unknown field provided to handleError function.');\r\n        }\r\n    }\r\n\r\n    const handleChange = e => {\r\n        // Triggered when the user change one of the product properties (name, price....)\r\n\r\n        setEditedData(prev => {\r\n            return ({\r\n                ...prev,\r\n                [e.target.name]: e.target.value,\r\n            });\r\n        });\r\n        handleError(e.target.name, e.target.value);\r\n    }\r\n\r\n    const handleNewTag = e => {\r\n        // Triggered when the user writes a tag name in the New Tag input field\r\n        setNewTag(e.target.value);\r\n    }\r\n\r\n    const handleTagAdd = () => {\r\n        // Triggered when the user adds a tag to the product (+ icon near the New Tag input field)\r\n\r\n        let auxTagsArray = editedData.tags;\r\n        auxTagsArray.push(newTag);\r\n        setEditedData(prev => {\r\n            return ({\r\n                ...prev,\r\n                tags: auxTagsArray,\r\n            });\r\n        });\r\n        setNewTag('');\r\n    }\r\n\r\n    const handleTagDelete = index => {\r\n        // Triggered when the user removes a tag from the product\r\n\r\n        let auxTagsArray = editedData.tags;\r\n        auxTagsArray.splice(index, 1);\r\n        setEditedData(prev => {\r\n            return ({\r\n                ...prev,\r\n                tags: auxTagsArray,\r\n            });\r\n        });\r\n    }\r\n\r\n    const handleSwitch = e => {\r\n        // Triggered when the product status (active/inactive) switch is manipulated.\r\n\r\n        setEditedData(prev => {\r\n            return ({\r\n                ...prev,\r\n                active: e.target.checked,\r\n            });\r\n        });\r\n    }\r\n\r\n    // Asynchronous function thats convert files to base64\r\n    const toBase64 = file => new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n    });\r\n\r\n    const handleUpload = event => {\r\n        // Triggered when the user uploads a photo. \r\n        // The photo will be converted and stored as base64 string.\r\n\r\n        toBase64(event.target.files[0])\r\n            .then(result => {\r\n                console.log(result)\r\n                setEditedData(prev => {\r\n                    return ({\r\n                        ...prev,\r\n                        picture: result,\r\n                    });\r\n                })\r\n            });\r\n    }\r\n\r\n    const handleClear = () => {\r\n        // Triggered when CLEAR button is clicked.\r\n        // clear will empty all the input fields and reset the error state.\r\n\r\n        setEditedData({\r\n            name: '',\r\n            price: '',\r\n            description: '',\r\n            tags: [],\r\n            active: false,\r\n            picture: '',\r\n        });\r\n        setNewTag('');\r\n    }\r\n\r\n    const handleConfirm = () => {\r\n        // PUT api call: sending the edited product data to be added to the DB\r\n\r\n        const body = {\r\n            id: editedData.id,\r\n            name: editedData.name,\r\n            price: editedData.price,\r\n            picture: editedData.picture,\r\n            description: editedData.description,\r\n            active: editedData.active,\r\n            tags: editedData.tags.toString(),\r\n        }\r\n        fetch(`http://127.0.0.1:8000/product`, {\r\n            method: 'PUT',\r\n            mode: 'cors',\r\n            body: JSON.stringify(body),\r\n        })\r\n            .then(() => navigate(\"/\", {}))\r\n            .catch(err => console.error('Error: Couldn\\'t PUT the data', err));\r\n    }\r\n\r\n    const handleBack = () => {\r\n        // Navigate back to Product Catalog page\r\n\r\n        navigate(\"/\");\r\n    }\r\n\r\n    const confirm_button_enabled_status = () => {\r\n        // This fuction determines wether the confirm button should be enabled or disabled.\r\n        /*\r\n            The confirm button is enabled only when we have valid values \r\n            in the mandatory fields (Name, price and description)\r\n        */\r\n\r\n        return (\r\n            editedData.name && editedData.price && editedData.description &&\r\n            !error.name.status && !error.price.status && !error.description.status\r\n        );\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className='title'>\r\n                <h1>\r\n                    {`PRODUCT DETAILS`}\r\n                </h1>\r\n            </div>\r\n            <div className='toolbar' style={{ justifyContent: 'flex-end' }}>\r\n                <Button variant=\"contained\" startIcon={<BackIcon />} onClick={handleBack}>\r\n                    {\"BACK\"}\r\n                </Button>\r\n                <Button variant=\"contained\" startIcon={<ClearIcon />} onClick={handleClear}>\r\n                    {\"CLEAR\"}\r\n                </Button>\r\n                <Button variant=\"contained\" startIcon={<ConfirmIcon />} onClick={handleConfirm} disabled={!confirm_button_enabled_status()}>\r\n                    {\"CONFIRM\"}\r\n                </Button>\r\n            </div>\r\n            <div className='edit-content'>\r\n                <div className=\"grid-item-0\">\r\n                    <input\r\n                        id=\"upload\"\r\n                        type=\"file\"\r\n                        accept=\"image/png, image/gif, image/jpeg\"\r\n                        onChange={handleUpload}\r\n                    />\r\n                    <IconButton>\r\n                        <label htmlFor=\"upload\">\r\n                            <Avatar id='product-img' alt=\"product\" src={editedData.picture ? editedData.picture : NoImage} />\r\n                        </label>\r\n                    </IconButton>\r\n                </div>\r\n                <TextField error={error.name.status} helperText={error.name.message} className=\"grid-item-1\" name=\"name\" label=\"Name\" variant=\"outlined\" size='small' value={editedData.name} onChange={handleChange} />\r\n                <TextField error={error.price.status} helperText={error.price.message} className=\"grid-item-2\" name=\"price\" label=\"Price\" variant=\"outlined\" size='small' value={editedData.price} onChange={handleChange} />\r\n                <TextField error={error.description.status} helperText={error.description.message} className=\"grid-item-3\" name=\"description\" label=\"Description\" multiline rows={4} variant=\"outlined\" size='small' value={editedData.description} onChange={handleChange} />\r\n                <div className=\"grid-item-4\">\r\n                    <div>\r\n                        <TextField label=\"New Tag\" size='small' value={newTag} onChange={handleNewTag} />\r\n                        <IconButton id='add-button' onClick={handleTagAdd} disabled={!newTag}>\r\n                            <AddIcon style={!newTag ? { backgroundColor: 'gray' } : { backgroundColor: '#1976d2' }} id='add-icon' />\r\n                        </IconButton>\r\n                    </div>\r\n                    <div>\r\n                        {\r\n                            (editedData && editedData.tags) && (\r\n                                editedData.tags.map((tag, index) => <Chip key={index} label={tag} color='primary' onDelete={() => handleTagDelete(index)} />)\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className='grid-item-5'>\r\n                    <Typography variant=\"body1\">\r\n                        {\"Activate Product\"}\r\n                    </Typography>\r\n                    <Switch checked={editedData.active} onChange={handleSwitch} />\r\n                </div>\r\n            </div>\r\n        </React.Fragment >\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}